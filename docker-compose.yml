version: '3.4'

services:

  nginx:
    container_name: 'rsww-gateway'
    build:
      context: ./apps/Gateway/
      dockerfile: Dockerfile
    ports:
      - '80:80'

  mongo:
    image: mongo:6.0.5
    container_name: 'rsww_mongo'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
      - "27017:27017"

  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rsww_rabbitmq'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "5672:5672"
      - "15672:15672"

  transportRead:
    image: bartoszdab/rsww-transport-read
    container_name: 'rsww_transport_read'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9010:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/transport_read_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_FLYWAY_USER=root
      - SPRING_FLYWAY_PASSWORD=root

  transportWrite:
    image: bartoszdab/rsww-transport-write
    container_name: 'rsww_transport_write'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9011:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/transport_write_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_FLYWAY_USER=root
      - SPRING_FLYWAY_PASSWORD=root

  paymentRead:
    image: bartoszdab/rsww-payment-read
    container_name: 'rsww_payment'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9012:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest

  reservationRead:
    image: bartoszdab/rsww-reservation-read
    container_name: 'rsww_reservation_read'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9001:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=reservations
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=root
      - SERVICES_TRANSPORT_APIURL=http://transportRead:8080/api/transport/v1/read
      - SERVICES_HOTEL_APIURL=http://hotelRead:8080/api/transport/v1/read

  reservationWrite:
    image: bartoszdab/rsww-reservation-write
    container_name: 'rsww_reservation_write'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9000:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=reservations
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=root


  hotelWrite:
    image: bartoszdab/rsww-hotel-write
    container_name: 'rsww_hotel_write'
    #image: nazwa_obrazu
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    environment:
      - RabbitMQOptions__HostName=rabbitmq 
      - RabbitMQOptions__UserName=guest
      - RabbitMQOptions__Password=guest
      - RabbitMQOptions__Port=5672
      - RabbitMQOptions__VirtualHost=/
      - RabbitMQOptions__RetryIntervalSeconds=10
  front:
    #TODO: generate image
    image: 'front'
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9013:8080"

