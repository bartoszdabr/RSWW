version: '3.4'

services:
  mongo:
    image: mongo:6.0.5
    container_name: 'rsww_mongo'
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    ports:
      - "27017:27017"

  postgres:
    image: postgres:13
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    ports:
      - '5432:5432'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: 'rsww_rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"

  transport_read:
    build:
      context: ./apps/transport
      dockerfile: Dockerfile
      target: transport-read-service-img
    container_name: 'rsww_transport_read'
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9010:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/transport_read_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_FLYWAY_USER=root
      - SPRING_FLYWAY_PASSWORD=root

  transport_write:
    build:
      context: ./apps/transport
      dockerfile: Dockerfile
      target: transport-write-service-img
    container_name: 'rsww_transport_write'
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9011:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/transport_read_db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_FLYWAY_USER=root
      - SPRING_FLYWAY_PASSWORD=root

  payment-read:
    build:
      context: ./apps/PaymentService
      dockerfile: Dockerfile
    container_name: 'rsww_payment'
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9012:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest

  reservation_read:
    build:
      context: ./apps/ReservationService
      dockerfile: Dockerfile
      target: reservation-read-service
    container_name: 'rsww_reservation_read'
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9001:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=reservations
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=root
    depends_on:
      - mongo
      - rabbitmq

  reservation_write:
    build:
      context: ./apps/ReservationService
      dockerfile: Dockerfile
      target: reservation-write-service
    container_name: 'rsww_reservation_write'
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 10s
        max_attempts: 5
        window: 60s
    ports:
      - "9000:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_RABBITMQ_PORT=5672
      - SPRING_RABBITMQ_USERNAME=guest
      - SPRING_RABBITMQ_PASSWORD=guest
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=reservations
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=root
    depends_on:
      - mongo
      - rabbitmq
      - transport_read

  hotel_write:
    build:
      context: ./apps/hotel/Hotel.Writer
      dockerfile: Dockerfile
    container_name: 'rsww_hotel_write'
    #image: nazwa_obrazu
    depends_on:
      - rabbitmq
    environment:
      - RabbitMQOptions__HostName=rabbitmq 
      - RabbitMQOptions__UserName=guest
      - RabbitMQOptions__Password=guest
      - RabbitMQOptions__Port=5672
      - RabbitMQOptions__VirtualHost=/
      - RabbitMQOptions__RetryIntervalSeconds=10

